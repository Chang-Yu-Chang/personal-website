<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs | Chang-Yu Chang 張昌祐</title>
    <link>https://www.changyuchang.name/blog/</link>
      <atom:link href="https://www.changyuchang.name/blog/index.xml" rel="self" type="application/rss+xml" />
    <description>Blogs</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>© 2022 Chang-Yu Chang</copyright><lastBuildDate>Fri, 04 Feb 2022 15:49:49 -0500</lastBuildDate>
    <image>
      <url>https://www.changyuchang.name/media/icon_hu0e7c8b08ad38bddc422f9dd2fd7c6093_2329_512x512_fill_lanczos_center_2.png</url>
      <title>Blogs</title>
      <link>https://www.changyuchang.name/blog/</link>
    </image>
    
    <item>
      <title>A graduate student&#39;s digital toolset</title>
      <link>https://www.changyuchang.name/blog/digital-toolset/</link>
      <pubDate>Tue, 11 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://www.changyuchang.name/blog/digital-toolset/</guid>
      <description>
&lt;script src=&#34;https://www.changyuchang.name/blog/digital-toolset/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#tldr&#34;&gt;TL;DR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#rules-of-choosing-appsoftware&#34;&gt;Rules of choosing app/software&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#appsoftware-list&#34;&gt;App/software list&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#evernote&#34;&gt;Evernote&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#google-chrome&#34;&gt;Google Chrome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#toggl&#34;&gt;Toggl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#pocket&#34;&gt;Pocket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ifttt&#34;&gt;IFTTT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#a-possible-caveat&#34;&gt;A possible caveat?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;I have always been interested in digital tools that can save my time from repetitive tasks, maximize the use of idle time, and ultimately tame my monkey mind. This post is more of a self note than a technical article. If you hate multiple open tabs, prefer a concise desktop dock, and need to work on multiple devices (PC/mobile), you may find this post helpful.&lt;/p&gt;
&lt;p&gt;NOTE: this is a working list of tools what I &lt;em&gt;currently&lt;/em&gt; use, which means that I may update it if I find other interesting tools.&lt;/p&gt;
&lt;div id=&#34;tldr&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;Who am I needing these tools? A biology PhD student who transitioned from doing 80% benchwork to 100% computational work since lockdown due to covid-19. I have a terrible memory so I rely on digital tools to reduce workload and help me focus. The tools listed in this post are not limited to research-related purposes.&lt;/p&gt;
&lt;p&gt;Chrome is my main working interface (similar to the idea of &lt;a href=&#34;https://www.wikiwand.com/en/Integrated_development_environment#:~:text=An%20integrated%20development%20environment%20(IDE,automation%20tools%20and%20a%20debugger.)%20in%20programming&#34;&gt;IDE&lt;/a&gt;. I use the following apps/services on Chrome:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Toggl for tracking time use&lt;/li&gt;
&lt;li&gt;Pocket for web-based article management&lt;/li&gt;
&lt;li&gt;IFTTT for automation of connecting applications&lt;/li&gt;
&lt;li&gt;Google Suite for office paperworks&lt;/li&gt;
&lt;li&gt;Workona for grouping tabs according to tasks&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Evernote is literally my second brain. I take notes, make schedules, and collect information in Evernote. It has a browser version, but I prefer it separate from Chrome, where some shortcuts are not available.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;rules-of-choosing-appsoftware&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Rules of choosing app/software&lt;/h2&gt;
&lt;p&gt;I am intrinsically prone to boredom from repetitive tasks. Here are some principles I asked myself when choosing an app/software:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Can it be launched on Google Chrome?&lt;/li&gt;
&lt;li&gt;Can I use it across multiple devices (multiple PCs or between PC and mobile)?&lt;/li&gt;
&lt;li&gt;Is the data stored/synced on the cloud?&lt;/li&gt;
&lt;li&gt;One app per functionality&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If an application has a browser version and can be opened on Chrome, I do not need to install the software. Accessibility across devices enables convenience when shifting devices at different circumstances (mobile when commuting and PC when working). This is supported by cloud-based storage that enables up-to-date synchronization of data. Also I try to limit myself using one app per functionality in order to streamline the workflow. For example, I only take notes on Evernote so I know that all notes can be retrieved by searching within Evernote.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;appsoftware-list&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;App/software list&lt;/h2&gt;
&lt;p&gt;In principle, all of them can be launched in Chrome, which allows easy synchronization among devices.&lt;/p&gt;
&lt;div id=&#34;evernote&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Evernote&lt;/h3&gt;
&lt;p&gt;I take all my notes in Evernote. It serves as my inbox for collecting information and for to-do list management. It has amazing features like internal note links, a tag system, and seamless cloud-based sync across devices. I also use Evernote to plan my weekly schedule (in the form of a &lt;a href=&#34;https://bulletjournal.com/&#34;&gt;bullet journal&lt;/a&gt;), manage learning or reading plans, and notes on cooking recipes. The way I manage notebooks and naming notes is a whole system unto itself, so I will save it for another blog post.&lt;/p&gt;
&lt;p&gt;Evernote &lt;em&gt;does&lt;/em&gt; have some cons. It is free to use but limited to 2GB storage space for attachments like images and pdf. To use some of the features (templates, more storage space, sync on more than two devices), one needs to subscribe to Evernote Premium ($7.99/month).&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;google-chrome&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Google Chrome&lt;/h3&gt;
&lt;p&gt;Google Chrome is my main working interface.&lt;/p&gt;
&lt;p&gt;The idea is to reduce the number of distracting windows/softwares. I centralized all paperworks that have to be done using a PC on Google Chrome if possible. Here are some advantages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Shortcuts. Cmd + Number (e.g., Cmd + 1) shifts to the first tab.&lt;/li&gt;
&lt;li&gt;Most apps that require sign-in allow one to link to Google account.&lt;/li&gt;
&lt;li&gt;Bookmarks bar.&lt;/li&gt;
&lt;li&gt;Google Suite (gmail, drive, doc, sheet, form, etc) that allows cloud-based synchronization.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As I rely more and more on Chrome for most tasks, the problem becomes how to manage the increasing number of tabs in Chrome. My fragile mind is easily distracted and irritated by many tabs.&lt;/p&gt;
&lt;p&gt;Thanks to the amazing Chrome extension &lt;a href=&#34;https://workona.com/&#34;&gt;Workona&lt;/a&gt;, which organizes tabs into groups. I use Workona to group my tabs into tasks related to work, coding, and reading. Similar to the idea of separating the functions of rooms by physical space: bedroom for sleeping and living room for relaxing.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;toggl&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Toggl&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://toggl.com/&#34;&gt;Toggl&lt;/a&gt; is a time tracking app that simply records the time spent on a particular task. I use it to track how long I have been focusing on a single task (for example, reading a paper or coding). Toggl has been extremely helpful during the challenging transition to a working-from-home norm.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;pocket&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Pocket&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://app.getpocket.com/&#34;&gt;Pocket&lt;/a&gt; saves online articles you find interesting to view later. It can operate on mobile phones, allowing me to read some light articles when commuting. A great feature it has is that the layout of the original article is removed and only simple text is saved to Pocket. It also has a &lt;a href=&#34;https://chrome.google.com/webstore/detail/save-to-pocket/niloccemoadcdkdjlinkgdfekeahmflj&#34;&gt;Chrome extension&lt;/a&gt; to quickly save articles.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ifttt&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;IFTTT&lt;/h3&gt;
&lt;p&gt;IFTTT lubricates the apps mentioned above. IFTTT stands for “IF This Then That”. It is like a robot always working in the background. I usually use it to connect Twitter (for example, an interesting paper that someone tweets), Pocket (for reading), and Evernote (for processing the information and taking notes). For example, &lt;strong&gt;If&lt;/strong&gt; I like or retweet a tweet, &lt;strong&gt;Then&lt;/strong&gt; IFTTT will automatically save the first link (usually directing to an article) in that tweet to my Pocket reading list. The second IFTTT service I use is that once I finish reading and archive the article in Pocket, IFTTT will create a new Evernote note in the background. The piece goes back to the only platform (Evernote) for collected information. There is &lt;a href=&#34;https://ifttt.com/&#34;&gt;much more IFTTT can do&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;a-possible-caveat&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;A possible caveat?&lt;/h2&gt;
&lt;p&gt;Although equipped with these tools, I still struggle with the information overload, getting the right paper or article to read, and motivating myself during mentally tough days. My anxiety has definitely been getting worse as my Pocket list keeps growing longer. Yet while I am poorly motivated, I know there is a system with which I feel comfortable to stick. Then with every difficulty, there comes the relief.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Acknowledgement&lt;/em&gt;: many thanks to &lt;a href=&#34;https://mikeblazanin.wordpress.com/&#34;&gt;Mike Blananin&lt;/a&gt; for reading and editing my scattered first draft and giving feedback. This has been a fun exercise!&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Build my own data-driven CV</title>
      <link>https://www.changyuchang.name/blog/data-driven-cv/</link>
      <pubDate>Sun, 03 Nov 2019 00:00:00 +0000</pubDate>
      <guid>https://www.changyuchang.name/blog/data-driven-cv/</guid>
      <description>
&lt;script src=&#34;https://www.changyuchang.name/blog/data-driven-cv/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#workflow-for-future-me-updating&#34;&gt;Workflow for future me updating&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;I came across this tweet by Nick Strayer (&lt;span class=&#34;citation&#34;&gt;@NicholasStrayer&lt;/span&gt;) on how to make a data-driven CV.&lt;/p&gt;
&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Building a data-driven CV in R. New blog post detailing how I built my CV/Resume using {{pagedown}}, {{glue}}, and spreadsheets; and how you can too! &lt;a href=&#34;https://twitter.com/hashtag/rstats?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#rstats&lt;/a&gt; &lt;a href=&#34;https://t.co/OGWZnMOFw3&#34;&gt;https://t.co/OGWZnMOFw3&lt;/a&gt; &lt;a href=&#34;https://t.co/xazFcV1Xv5&#34;&gt;pic.twitter.com/xazFcV1Xv5&lt;/a&gt;&lt;/p&gt;&amp;mdash; Nick Strayer (@NicholasStrayer) &lt;a href=&#34;https://twitter.com/NicholasStrayer/status/1181254905018761216?ref_src=twsrc%5Etfw&#34;&gt;October 7, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;As soon as I saw this tweet, I decided to abandon my latest CV made in latex and change it to a cool data-driven CV! This is one of the most enjoyable moment using R to make (future) life easier, subsequent to indexing my Rmd files for data analysis.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span style=&#34;display:block;&#34; id=&#34;fig:unnamed-chunk-3&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;indexed_rmd.png&#34; alt=&#34;Having all Rmd for a project indexed is so relaxing.&#34;  /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: Having all Rmd for a project indexed is so relaxing.
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The blog post by Nick is really thorough so I am not going to go through it, but I do want to make a note for future me, in case I need to update my CV.&lt;/p&gt;
&lt;p&gt;The data-driven CV is based on two packages: &lt;code&gt;pagedown&lt;/code&gt; and &lt;code&gt;tidyr&lt;/code&gt;. &lt;code&gt;pagedown&lt;/code&gt; enables the html to be printable in a nice pdf format, and &lt;code&gt;tidyr&lt;/code&gt; gets together the CV information from a single csv file. Plus, great thanks to Nick that wrote the R functions communicating the csv to a well-styled CV. For people with terrible sense of art design like me, the template and default settings for the CV are really helpful.&lt;/p&gt;
&lt;div id=&#34;workflow-for-future-me-updating&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Workflow for future me updating&lt;/h1&gt;
&lt;p&gt;Here is my &lt;a href=&#34;http://rpubs.com/ray57512/cyc-cv&#34;&gt;CV&lt;/a&gt; and a one-page &lt;a href=&#34;http://rpubs.com/ray57512/cyc_resume&#34;&gt;resume&lt;/a&gt;. The content is not fully compeleted yet, so I save the workflow for future CV update:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;Update &lt;code&gt;positions.csv&lt;/code&gt; that saves all personal CV information in a tidy format with well-defined variables.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Knit the &lt;code&gt;cv.Rmd&lt;/code&gt; and &lt;code&gt;resume.Rmd&lt;/code&gt; with the parameter &lt;code&gt;PDF_EXPORT &amp;lt;- TRUE&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Publish the knitted html on &lt;a href=&#34;https://rpubs.com/&#34;&gt;Rpub&lt;/a&gt; to obtain the links. Export the local knitted html files into pdf format.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For updating website pdf links, move the pdf files to folder &lt;code&gt;static/pdf/&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Push git commit and deploy the website.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Custom domain and commenting on personal website</title>
      <link>https://www.changyuchang.name/blog/custom-domain-and-commenting/</link>
      <pubDate>Wed, 18 Apr 2018 00:00:00 +0000</pubDate>
      <guid>https://www.changyuchang.name/blog/custom-domain-and-commenting/</guid>
      <description>
&lt;script src=&#34;https://www.changyuchang.name/blog/custom-domain-and-commenting/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#custom-domain&#34;&gt;Custom domain&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#commenting-plug-in&#34;&gt;Commenting plug-in&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;A quick update about new functions of this website. Two slight changes I have made: relocate the website to a customized domain, and enable the commenting function.&lt;/p&gt;
&lt;p&gt;In case you want to know how this website was intially built, I wrote a &lt;a href=&#34;https://www.changyuchang.name/post/how-to-build-up-this-website/&#34;&gt;guide&lt;/a&gt;. It’s a simple guide that contains other well-written tutorials and some caveats I’ve encounterd.&lt;/p&gt;
&lt;div id=&#34;custom-domain&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Custom domain&lt;/h1&gt;
&lt;p&gt;Again, I found myself struggling with the terms for a while. Here I provide the basic definitions for the terms not only used in this guide, but probably popping up in other tutorials. These definitions are mostly from the &lt;a href=&#34;https://www.netlify.com/docs/custom-domains/&#34;&gt;guide&lt;/a&gt; provided by netlify.&lt;/p&gt;
&lt;div id=&#34;terms&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Terms&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;domain name (or domain for short): full name used to access a site. For example, &lt;code&gt;changyuchang.netlify.com&lt;/code&gt; or &lt;code&gt;&amp;lt;!-- --&amp;gt;www.changyuchang.name&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;custom domain: in this case, a non-netlify assigned domain. Simply speaking, a “website link” that does not have &lt;code&gt;netlify.com&lt;/code&gt; as suffix. For example, &lt;code&gt;www.changyuchang.name&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;domain registrar: company that lets you buy and register a domain name. I used &lt;a href=&#34;https://www.godaddy.com&#34;&gt;GoDaddy&lt;/a&gt; without any specific reason.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DNS (Domain Name System): a system that translates domain names (basically in English and human readable) to IP addresses (numbers and computer readable).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DNS servers (or nameserver): a server where DNS is implemented.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DNS provider: company that maintains the DNS servers.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;hostnames: nameservers that are provided by netlify.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;HTTPS (Hypertext Transfer Protocol Secure): here is the definition from Google “an internet communication protocol that protects the integrity and confidentiality of data between the user’s computer and the site”. My understanding is … use it to protect yourself and the website!&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;now-you-are-ready-to-set-up-a-custom-domain&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Now you are ready to set up a custom domain&lt;/h3&gt;
&lt;p&gt;To be noted, you don’t need to edit any source code to change a custom domain.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;First, buy a domain you like. I use &lt;a href=&#34;https://www.godaddy.com&#34;&gt;GoDaddy&lt;/a&gt; without any specific reason. Since this domain is for personal website, I chose a domain name &lt;code&gt;changyuchang.name&lt;/code&gt; and luckily (this name is not common haha) nobody has registered for it. You can buy the plan whatever the period you want to maintain this domain.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Second, go to netlify, the website deployment we used. Go to domain setting and add custom domain. Paste the domain, in my case, &lt;code&gt;www.changyuchang.name&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now netlify asked you to configure the DNS provider. One way netlify provided is to point your domain’s nameservers at netlify. What does that mean? Netlify gave me four custom hostnames, something like &lt;code&gt;dns1.p05.nsone.net&lt;/code&gt;, assigned to my DNS zone. Go back to GoDaddy, and edit the DNS of your domain. You will find a section called Nameservers where you can add custom nameservers. Simply paste the four hostnames to this section.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This process may take hours. I waited until the next day I modified these settings.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Last, encrypt the website by HTTPS. This only requires a simple click on the following section in netlify.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Woohoo! Now you have a website domain which is not under netlify domain.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;commenting-plug-in&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Commenting plug-in&lt;/h1&gt;
&lt;p&gt;To add the commenting plug-in, you have to change configuration code in your R project.&lt;/p&gt;
&lt;p&gt;An external commenting plug-in is needed for the website. Although &lt;code&gt;blogdown&lt;/code&gt; does not have an internal commenting function, it and the theme hugo-lithium-theme do have default setting ready for commenting plug-in, which is &lt;a href=&#34;https://disqus.com/&#34;&gt;Disqus&lt;/a&gt;. Here is how it works:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Sign up in Disqus, and create a new site. Type in Website Name and Shortname. Website Name is not important, but make sure you remember the Shortname. We are going to use this Shortname in the configuration file &lt;code&gt;config.toml&lt;/code&gt; (this should be something you are familiar with) in the R project that contains the source code for website.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In &lt;code&gt;config.toml&lt;/code&gt; of the theme hugo-lithium-theme, there is a option called &lt;code&gt;disqusShortname&lt;/code&gt;. Paste the short name in between quotation marks. If you are not sure with the Shortname, go back to the website setting on Disqus and check.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Oh oh, don’t commit and push the source code yet. You also have to set up a functional &lt;code&gt;baseurl&lt;/code&gt; (the first option in &lt;code&gt;config.toml&lt;/code&gt;). This should be the domain for this website, which is, in my case, “&lt;a href=&#34;https://www.changyuchang.name/&#34; class=&#34;uri&#34;&gt;https://www.changyuchang.name/&lt;/a&gt;”.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now you can commit and push the source code to github. See the commeting plug-in after each post.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are &lt;a href=&#34;https://help.disqus.com/installation/disqus-appearance-tweaks&#34;&gt;display configurations&lt;/a&gt; that you can play with Disqus, but I haven’t gone through any detail.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Generalized birthday problem Rcpp</title>
      <link>https://www.changyuchang.name/blog/generalized-birthday-problem-rcpp/</link>
      <pubDate>Fri, 30 Mar 2018 00:00:00 +0000</pubDate>
      <guid>https://www.changyuchang.name/blog/generalized-birthday-problem-rcpp/</guid>
      <description>
&lt;script src=&#34;https://www.changyuchang.name/blog/generalized-birthday-problem-rcpp/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;In the previous &lt;a href=&#34;https://changyuchang.name/post/generalized-birthday-problem/&#34;&gt;post&lt;/a&gt;, I tried to use some algorithms to speed up simulation. Now in this post, I will introduce a pretty powerful package &lt;code&gt;Rcpp&lt;/code&gt;, which has the potential to fundementally change the way you do simulation if you want to employ a time-consuming simulation in R. Let’s finish this project!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://changyuchang.name/post/generalized-birthday-problem-rcpp/#rcpp&#34;&gt;Rcpp&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://changyuchang.name/post/generalized-birthday-problem-rcpp/#generalized-birthday-problem&#34;&gt;Generalized birthday problem&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://changyuchang.name/post/generalized-birthday-problem-rcpp/#generalbirthdayproblem-package&#34;&gt;GeneralBirthdayProblem Package&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;rcpp&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Rcpp&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Rcpp&lt;/code&gt; is basically a package that incorporates C++ code in R. For me, using &lt;code&gt;Rcpp&lt;/code&gt; means my code can work faster while I can still enjoy the convenience of many versatile R packages. A simple way to use &lt;code&gt;Rcpp&lt;/code&gt; is the function &lt;code&gt;cppFunction&lt;/code&gt;. C++ code comes in as text in your R script. In this example, I define the function &lt;code&gt;simulateC&lt;/code&gt;, which simulates and calculate the probility of a birthday shared by at least &lt;em&gt;k&lt;/em&gt; persons in a room size of &lt;em&gt;room&lt;/em&gt; (sorry for inconsistent notation, but I prefer i as index in a loop). I am totally not an expert in C++, so I am not goint through the code (this script is my first C++ script, to be honest). This is just to give a taste of how fast a function created by &lt;code&gt;Rcpp&lt;/code&gt; can be.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(Rcpp)
cppFunction(&amp;#39;
#include &amp;lt;Rcpp.h&amp;gt;
using namespace Rcpp;
// [[Rcpp::export]]
float simulateC (int k, int room, int replicate) {
  IntegerVector result (replicate); 
  for (int r=0; r&amp;lt;replicate; r++){
    IntegerVector counts(365);
    for (int i=0; i&amp;lt;room; i++) {
      int pos = rand() % 365;
      if (pos &amp;lt; 365 &amp;amp;&amp;amp; pos &amp;gt;= 0) counts[pos] ++;
    } 
    if (max(counts) &amp;gt;= k) {
      result[r] = TRUE;
    } else result[r] = FALSE;
  }
  float prob = float(sum(result))/float(replicate);
  return prob;
}
&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s benchmark the time spent by either &lt;code&gt;tabulate&lt;/code&gt; or &lt;code&gt;Rcpp&lt;/code&gt; method. &lt;code&gt;rbenchmark&lt;/code&gt; is a package that we can measure the computer time consumed.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(rbenchmark)
k &amp;lt;- 2
room &amp;lt;- 23
r &amp;lt;- 1e4
set.seed(1)
b &amp;lt;- benchmark(&amp;quot;Rcpp&amp;quot; = {simulateC(k=2, room=room, replicate=r)},
               &amp;#39;Tabulate&amp;#39; = {
                 birth &amp;lt;- matrix(sample(1:365, r*room, replace=TRUE), nrow=r, ncol=room)
                 sum(apply(birth, 1, function(x) max(tabulate(x))&amp;gt;=k)) /r},
               replications = 1000,
               columns=c(&amp;#39;test&amp;#39;, &amp;#39;elapsed&amp;#39;, &amp;#39;replications&amp;#39;, &amp;#39;relative&amp;#39;)
)

b &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Bascially, &lt;code&gt;benchmark&lt;/code&gt; runs each methods for 1000 times, and compare the time consumed. It takes 7.643/1000 = 0.007643 seconds for a run of &lt;code&gt;simulateC(k=2, room=23, replicate=1e4)&lt;/code&gt; and 0.065545 seconds for a run of &lt;code&gt;tabulate&lt;/code&gt; method. So on average, the &lt;code&gt;Rcpp&lt;/code&gt; method is 8.576 times faster than &lt;code&gt;tabulate&lt;/code&gt; methods.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;generalized-birthday-problem&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Generalized birthday problem&lt;/h3&gt;
&lt;p&gt;This is the finall verison of function in generalized birthday problem project. Simply replace the code for simulation of one room size by &lt;code&gt;simulateC&lt;/code&gt;. Now we can try large room size and large replicates that are unbelievably time-consuming if we do it withou RCpp.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(Rcpp)
gbp_rcpp &amp;lt;- function(k=2, p=.5, B_l=1000, B_u=20000, threshold=.001) {
  i &amp;lt;- k                       # Tested room size; start from k persons in a room
  x &amp;lt;- 1                       # Counter for while loop
  L &amp;lt;- 0                       # Lower bound for binary search
  R &amp;lt;- k^4+100+sample(-k:k, 1) # Upper bound for binary search
  
  # Create an empty data frame for result
  result &amp;lt;- setNames(data.frame(matrix(0, 100, 3)), c(&amp;quot;room&amp;quot;, &amp;quot;p&amp;quot;, &amp;quot;replicate&amp;quot;))
  
  while (abs(result$room[x] - p) &amp;gt;= threshold) {
    # Increase replicate when approaching target room size
    r &amp;lt;- floor(-B_u/(1+exp(-.03* ((R-L)-200))))+(B_u+B_l)
    result$replicate[x] &amp;lt;- r
    
    # Test room size i
    i &amp;lt;- ceiling((L+R)/2)
    result$room[x] &amp;lt;- i 

    # Calculate probability by running simulation in C++
    result$p[x] &amp;lt;- simulateC(k=k, room=i, replicate = r)
    if (result$p[x] &amp;gt;= p) R &amp;lt;- i
    if (result$p[x] &amp;lt; p) L &amp;lt;- i
    
    # Break the loop if trapped
    if(sum(duplicated(tail(result$room[1:x], 2))) == 1 &amp;amp; result$room[x] != 0) break
    
    # Print out room sizes tested
    cat(paste0(&amp;#39;Room size tested:&amp;#39;, i, &amp;#39;\tprobability:&amp;#39;, round(result$p[x], 3), &amp;#39;\treplicate size: &amp;#39;, r, &amp;#39;\n&amp;#39;))
    
    # Counter for steps
    x &amp;lt;- x + 1          
 }
  ans &amp;lt;- R
  return(list(answer=ans,
              result=result[1:x,]))
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s try test the ideal room size for &lt;em&gt;k=8&lt;/em&gt; and &lt;em&gt;p=0.5&lt;/em&gt;. When approaching the ideal room size, increase the replicate size up to one million.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(1)
system.time(y_rcpp &amp;lt;- gbp_rcpp(k=8, p=.5, B_u=1000000))
y_rcpp&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we have confident to say the ideal room size for &lt;em&gt;k=8&lt;/em&gt; is 798.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;generalbirthdayproblem-package&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;GeneralBirthdayProblem package&lt;/h3&gt;
&lt;p&gt;In case you want to play with generalized birthday problem and the source code, or don’t want to write from the very beginning. I uploaded the package to my github. You can simply dowload the R package by the following command in your R interface.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;devtools::install_github(&amp;quot;Chang-Yu-Chang/GeneralBirthdayProblem&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This package only has two functions: &lt;code&gt;simulateC&lt;/code&gt; and &lt;code&gt;gbp&lt;/code&gt;. These two functions are basically the same as what I used throughout this post. &lt;code&gt;simulateC&lt;/code&gt; simulates and reports the &lt;em&gt;probability&lt;/em&gt; given &lt;em&gt;k&lt;/em&gt;, room size, and the replicate size.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;simulateC(k=2, room=23, replicate=1e5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;gbp&lt;/code&gt; incorporates the &lt;code&gt;simulateC&lt;/code&gt; function and finds the ideal room size given &lt;em&gt;k&lt;/em&gt; and &lt;em&gt;p&lt;/em&gt;. I set the printing flexible so that if you don’t want the result to be printed every time.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gbp(k=2, p=0.5) # Default is print=FALSE&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Generalized birthday problem</title>
      <link>https://www.changyuchang.name/blog/2018-03-14-generalized-birthday-problem/</link>
      <pubDate>Wed, 14 Mar 2018 00:00:00 +0000</pubDate>
      <guid>https://www.changyuchang.name/blog/2018-03-14-generalized-birthday-problem/</guid>
      <description>
&lt;script src=&#34;https://www.changyuchang.name/blog/2018-03-14-generalized-birthday-problem/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;This project comes from the coding class I am taking this semester. The simplest birthday problem is as followed: how many people should be in a room such that the probability of a birthday shared by at least two persons is just above 0.5? I found this problem is very interesting. Throughout the process dealing this problem, some powerful R packages and essential coding skills are incorporated for more efficient simulation. In this project, I will try to address generalized birthday problem in an intuitive way (easy coding but computer expensive and slow) to somehow more advanced approaches.&lt;/p&gt;
&lt;div id=&#34;whats-probability-of-one-birthday-shared-by-two-persons-in-any-size-of-room&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;What’s probability of one birthday shared by two persons in any size of room?&lt;/h3&gt;
&lt;p&gt;The probability we are interested calculated such that a birthday shared by at least &lt;em&gt;k&lt;/em&gt; persons. The targeted probability &lt;em&gt;p&lt;/em&gt; here is 0.5. For each room size &lt;em&gt;i&lt;/em&gt;, &lt;em&gt;r&lt;/em&gt; replicates are tested.&lt;/p&gt;
&lt;p&gt;In the following case, I did only 20 replicates.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;k &amp;lt;- 2                # Birthday shared by k persons
p &amp;lt;- 0.5              # Targetd probability
r &amp;lt;- 20               # Replicates
result &amp;lt;- rep(0, 100) # A vector for saving result 
i &amp;lt;- 10                  # Room size&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now here is trick. For each room size, create a single matrix that has &lt;em&gt;r&lt;/em&gt; rows and &lt;em&gt;i&lt;/em&gt; columns. The next step is to check by row: if there are at least &lt;em&gt;k=2&lt;/em&gt; persons in one room (&lt;em&gt;i=10&lt;/em&gt;) sharing the same birthday, return &lt;code&gt;TRUE&lt;/code&gt;. Use &lt;code&gt;apply&lt;/code&gt; to implicitly loop through each row. The result probability would be the sum of this vector divided by total replicate &lt;em&gt;r&lt;/em&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(12345)
birth &amp;lt;- matrix(sample(1:365, r*i, replace=TRUE), nrow=r, ncol=i)
birth&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The probability for 2 persons sharing the same birthday in a room with 10 persones is roughly 0.1.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sum(apply(birth, 1, function(x) max(tabulate(x))&amp;gt;=k )) / r&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now test different room sizes. Say I wanna test room sizes ranging from &lt;em&gt;k&lt;/em&gt; to 100 (testing room size smaller than &lt;em&gt;k&lt;/em&gt; is nonsense). Use &lt;code&gt;for&lt;/code&gt; loop to go through room size from k to 100.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;k &amp;lt;- 2                # Birthday shared by k persons
p &amp;lt;- 0.5              # Targetd probability
r &amp;lt;- 100000           # Replicates
result &amp;lt;- rep(0, 100) # A vector for saving result 

system.time({         # Record time used
for (i in 1:100) {    # Test room sizes from 1 to 100 persons
  birth &amp;lt;- matrix(sample(1:365, r*i, replace=TRUE), nrow=r, ncol=i)
  result[i] &amp;lt;- sum(apply(birth, 1, function(x) max(tabulate(x))&amp;gt;=k )) / r
}
})&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This simulation is extremely slow. Something is pretty obvious, for example, if I already know the result is going to be 23 just after calculating it, I don’t need to do the else (24-100), which consumes tons of time. For the rest of this post and maybe the other post, I will introduce some ways to speed up the simulation or make it more accurracy.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(result, type=&amp;quot;l&amp;quot;, xlab=&amp;quot;room size&amp;quot;, ylab=&amp;quot;probability&amp;quot;, main=&amp;quot;probability of a birthday shared by k persons&amp;quot;)
abline(h=p, col=&amp;quot;red&amp;quot;) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The answer is 23 persons.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;min(which(result&amp;gt;p))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;binary-search&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Binary search&lt;/h3&gt;
&lt;p&gt;If I know where I stand is still far away from the target probability, can I apply a larger step, not step-by-step, in order to move quickly? A good way is to employ binary search algorithm. The key concept is to skip unecessary mid-points (in our case, room sizes) for saving computer time. Given a series of &lt;em&gt;n&lt;/em&gt; sorted room sizes ranging from lower bound &lt;span class=&#34;math inline&#34;&gt;\(L=1\)&lt;/span&gt; to upper bound &lt;span class=&#34;math inline&#34;&gt;\(R=n\)&lt;/span&gt;, then the corresponding probability of at least k people sharing the same birthday are &lt;span class=&#34;math inline&#34;&gt;\(p_1, p_2, \dots, p_n\)&lt;/span&gt;). Our goal is to find the probability of room size that is close and slightly large than 0.5 &lt;span class=&#34;math inline&#34;&gt;\(p_t=0.5\)&lt;/span&gt;. Here is the procedure:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Set L to 1 and R to n. R would be always larger than L.&lt;/li&gt;
&lt;li&gt;Calculate i (position fo the middle element). Set i to ceiling since the room size should be an integer.&lt;/li&gt;
&lt;li&gt;If &lt;span class=&#34;math inline&#34;&gt;\(p_i&amp;lt;p_t\)&lt;/span&gt;, set L to i + 1 and go to step 2.&lt;/li&gt;
&lt;li&gt;If &lt;span class=&#34;math inline&#34;&gt;\(p_i&amp;gt;p_t\)&lt;/span&gt;, set R to i − 1 and go to step 2.&lt;/li&gt;
&lt;li&gt;Repeat step 2-4 until &lt;span class=&#34;math inline&#34;&gt;\(p_i=p_t\)&lt;/span&gt;, the search is done. m is our answer.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gbp &amp;lt;- function(k=2, p=.5, r=100000, threshold=.001) {
  i &amp;lt;- k                       # Tested room size; start from k persons in a room
  x &amp;lt;- 1                       # Counter for while loop
  L &amp;lt;- 0                       # Lower bound for binary search
  R &amp;lt;- k^4+100+sample(-k:k, 1) # Upper bound for binary search
  
  # Create an empty data frame for result
  result &amp;lt;- setNames(data.frame(matrix(0, 100, 2)), c(&amp;quot;room&amp;quot;, &amp;quot;p&amp;quot;))
  
  while (abs(result$room[x] - p) &amp;gt;= threshold) {
    # Test room size i
    i &amp;lt;- ceiling((L+R)/2)
    result$room[x] &amp;lt;- i
    
    # Calculate probability
    birth &amp;lt;- matrix(sample(1:365, r*i, replace=TRUE), nrow=r, ncol=i)
    result$p[x] &amp;lt;- sum(apply(birth, 1, function(x) max(tabulate(x))&amp;gt;=k )) / r
    if (result$p[x] &amp;gt;= p) R &amp;lt;- i
    if (result$p[x] &amp;lt; p) L &amp;lt;- i
    
    # Break the loop if trapped
    if(sum(duplicated(tail(result$room[1:x], 2))) == 1 &amp;amp; result$room[x] != 0) break
    
    # Print out room sizes tested
    cat(paste0(&amp;#39;Room size tested:&amp;#39;, i, &amp;#39;\tprobability:&amp;#39;, round(result$p[x], 3), &amp;#39;\n&amp;#39;))
    
    # Counter for steps
    x &amp;lt;- x + 1          
  }
  ans &amp;lt;- R
  return(list(answer=ans,
              result=result[1:x,]))
}

system.time(y&amp;lt;-gbp(k=2, p=.5))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Yes, I set the final &lt;span class=&#34;math inline&#34;&gt;\(R\)&lt;/span&gt; as answer. The reason why &lt;span class=&#34;math inline&#34;&gt;\(R\)&lt;/span&gt; is the correct answer rather than &lt;span class=&#34;math inline&#34;&gt;\(L\)&lt;/span&gt; is because in the binary search algorithm, the middle point is always set to ceiling. If you set the middle point to floor, it is also true that &lt;span class=&#34;math inline&#34;&gt;\(R\)&lt;/span&gt; is the right answer, because we want the simulated probability a bit &lt;em&gt;above&lt;/em&gt; target probability.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;y&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;replicate-size&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Replicate size&lt;/h3&gt;
&lt;p&gt;Same logic can be applied to replicate size. We only need to increase replicates size when close to the target probability. If we know there are still hundreds of rooms size between current roome size and ideal room size, simulating a room size for millions times seems to be bad idea. As we are getting closer to the ideal room size, accuracy becomes more and more important. Accuracy may not be a big deal when &lt;em&gt;k&lt;/em&gt; is 2 or 3, since the ideal room size is small. However, for larger &lt;em&gt;k&lt;/em&gt;, for example, 8, then the efficiency become important for the first few steps.&lt;/p&gt;
&lt;p&gt;To gradually increase replicate size, a sigmoidal curve might be a good idea.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;B_l &amp;lt;- 1000
B_u &amp;lt;- 20000
x &amp;lt;- 1:500
y &amp;lt;- floor(-B_u/(1+exp(-.03* (x-200))))+(B_u+B_l)
plot(x, y, type=&amp;#39;l&amp;#39;, xlab=&amp;#39;distance to ideal room size&amp;#39;, ylab=&amp;#39;replicate size&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When we are approximately 400 persons away the ideal room size, just do 1000 replicates. Whereas almost being to the goal, try 20000 replicates. Then the function can be modified as followed.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gbp &amp;lt;- function(k=2, p=.5, B_l=1000, B_u=20000, threshold=.001) {
  i &amp;lt;- k                       # Tested room size; start from k persons in a room
  x &amp;lt;- 1                       # Counter for while loop
  L &amp;lt;- 0                       # Lower bound for binary search
  R &amp;lt;- k^4+100+sample(-k:k, 1) # Upper bound for binary search
  
  # Create an empty data frame for result
  result &amp;lt;- setNames(data.frame(matrix(0, 100, 3)), c(&amp;quot;room&amp;quot;, &amp;quot;p&amp;quot;, &amp;quot;replicate&amp;quot;))
  
  while (abs(result$room[x] - p) &amp;gt;= threshold) {
    # Increase replicate when approaching target room size
    r &amp;lt;- floor(-B_u/(1+exp(-.03* ((R-L)-200))))+(B_u+B_l)
    result$replicate[x] &amp;lt;- r
    
    # Test room size i
    i &amp;lt;- ceiling((L+R)/2)
    result$room[x] &amp;lt;- i 

    # Calculate probability
    birth &amp;lt;- matrix(sample(1:365, r*i, replace=TRUE), nrow=r, ncol=i)
    result$p[x] &amp;lt;- sum(apply(birth, 1, function(x) max(tabulate(x))&amp;gt;=k )) / r
    if (result$p[x] &amp;gt;= p) R &amp;lt;- i
    if (result$p[x] &amp;lt; p) L &amp;lt;- i
    
    # Break the loop if trapped
    if(sum(duplicated(tail(result$room[1:x], 2))) == 1 &amp;amp; result$room[x] != 0) break
    
    # Print out room sizes tested
    cat(paste0(&amp;#39;Room size tested:&amp;#39;, i, &amp;#39;\tprobability:&amp;#39;, round(result$p[x], 3), &amp;#39;\treplicate size: &amp;#39;, r, &amp;#39;\n&amp;#39;))
    
    # Counter for steps
    x &amp;lt;- x + 1          
 }
  ans &amp;lt;- R
  return(list(answer=ans,
              result=result[1:x,]))
}

system.time(y&amp;lt;-gbp(k=8, p=.5))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;y&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I will continue the rest of this project in another post.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>How to build up this website?</title>
      <link>https://www.changyuchang.name/blog/how-to-build-up-this-website/</link>
      <pubDate>Thu, 08 Mar 2018 00:00:00 +0000</pubDate>
      <guid>https://www.changyuchang.name/blog/how-to-build-up-this-website/</guid>
      <description>
&lt;script src=&#34;https://www.changyuchang.name/blog/how-to-build-up-this-website/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#intro&#34;&gt;Intro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tutorials&#34;&gt;Tutorials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#caveats-i-have-jumped-in&#34;&gt;Caveats I have jumped in&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;intro&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Intro&lt;/h1&gt;
&lt;p&gt;The first (meaningful) post for this new website! After searching for many blog managers, I finally found out a cool and nice way to generate a good-looking website. The whole website is built under a &lt;code&gt;R&lt;/code&gt; package &lt;code&gt;blogdown&lt;/code&gt;, which is based on another pretty handy package &lt;code&gt;rmarkdown&lt;/code&gt; that helps you markdown pdf or html file in Rstudio. &lt;code&gt;blogdown&lt;/code&gt; employs a site generator called Hugo. With that, there are numerous &lt;a href=&#34;http://themes.gohugo.io&#34;&gt;themes&lt;/a&gt; developed by other Hugo users.&lt;/p&gt;
&lt;p&gt;Some other features would be detailedly described in tutorials, here I wanna spent more time on the problems that I encountered during making the website.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;tutorials&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Tutorials&lt;/h1&gt;
&lt;p&gt;Though now everything seems straightforward, it took me many hours to figure out how to make this website… Anyway, check these sources out!&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;a href=&#34;https://bookdown.org/yihui/bookdown/&#34;&gt;bookdown: Authoring Books and Technical Documents with R Markdown&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A book from authors. I found the most useful section is the first few paragraphs introducing the package and ‘&lt;em&gt;1.7 A recommended workflow&lt;/em&gt;’. The details are somehow not clear to me, because I had no experience building a website and Github. For people like me just starting to use github, I recommend the tutorials followed.&lt;/p&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;a href=&#34;https://alison.rbind.io/post/up-and-running-with-blogdown/&#34;&gt;Another tutorial (more pictures and workflow) from the author&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I like the flowchart that this tutorial uses to decribe the workflow. More pictures, more intuitive.&lt;/p&gt;
&lt;ol start=&#34;3&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;a href=&#34;https://cosx.org/2018/01/build-blog-with-blogdown-hugo-netlify-github/&#34;&gt;Tutorial for blogdown in Chinese (中文教學)&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Found this one later after I have almost finished the whole website. It’s helpful if you read Chinese.&lt;/p&gt;
&lt;ol start=&#34;4&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;a href=&#34;https://support.rstudio.com/hc/en-us/articles/200532077-Version-Control-with-Git-and-SVN&#34;&gt;Tutorial for using github with Rstudio&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This one shows how to connect github with Rstudio. Also check out &lt;a href=&#34;http://r-bio.github.io/intro-git-rstudio/&#34;&gt;this one&lt;/a&gt; if you like more illustrationss. After downloading git, the simplest way to do this is as followed: create a github respository, copy the link, go back to Rstudio and create a R package under vision control, paste the link, and be happy. If you read Chinese, this &lt;a href=&#34;https://hellolynn.hpd.io/2017/01/18/git%E6%96%B0%E6%89%8B%E5%85%A5%E9%96%80%E6%95%99%E5%AD%B8-part-1/&#34;&gt;website&lt;/a&gt; really helped me understand how git works.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;caveats-i-have-jumped-in&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Caveats I have jumped in&lt;/h1&gt;
&lt;p&gt;Belows are some caveats I have spent a lot of time troubleshooting.&lt;/p&gt;
&lt;div id=&#34;theme-choose-a-well-documented-theme.&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Theme! Choose a well documented theme.&lt;/h2&gt;
&lt;p&gt;I chose &lt;a href=&#34;https://github.com/gcushen/hugo-academic/&#34;&gt;hugo-academic&lt;/a&gt; for my website. One very first reason is the detailed description about each tunable feature. Another reason is intuitive: this website is designed for person in academics.&lt;/p&gt;
&lt;p&gt;In the beginning, I browsed through all the themes and cannot make the choice. The first theme that I picked has elegant design and comfortable layout but shows very limited information about how to tune some of the features. So when the other coding/building problems came in, I did’t know where the problem was from. Be wise to choose a beautiful and well described theme.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;make-sure-you-understand-how-git-and-github-work-and-how-rstudio-interacts-with-them.&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Make sure you understand how git and github work, and how Rstudio interacts with them.&lt;/h2&gt;
&lt;p&gt;For people who have intensively used github, this might be trivial. But it was NOT trivial to me at all to understand how it works. It took me a while (maybe 0.5-1 hour reading about the introduction articles) to understand what git and github are, and how to push code from Rstudio to github.&lt;/p&gt;
&lt;p&gt;Here are my understanding of these terms.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Rstudio: the interface for you to write r, rmd, and other codes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;git: a version control system for a team to track changes in code. Yes, a team. Now this is your personal website so that the only team member is you. Noted that it is possible to share the source code with other team members and co-manage the source code on github.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;github: an online and open-source version of git. You need an github account to use &lt;code&gt;blogdown&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Hugo: a site generator, like a witchcraft beautifying your website. I guess the reason that &lt;code&gt;blogdown&lt;/code&gt; authors recommends Hugo is that there are many user-contributed themes available. Authors also provide the &lt;a href=&#34;https://bookdown.org/yihui/blogdown/migration.html&#34;&gt;way&lt;/a&gt; to migrate from other site generators, such as Jekyll and WordPress.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;netlify: deploys static website from your source code on github, and provides free domains (where your website will have a prefix “.name”). If you have registered a domain outside netlify for yourself, you could also customize your domain to what you like.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;some-commands-and-steps-only-need-to-be-done-once.&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Some commands and steps only need to be done once.&lt;/h2&gt;
&lt;p&gt;For example, to initiate the website, you only need to go through the workflow below once:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;Connect Rstudio with github by createing a new project under vision control (you can see this option when creating a new R project: “Vision control”)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create a new website by the function &lt;code&gt;blogdown::new_site(sample=&#39;TRUE&#39;, theme=&#39;hugo_academic&#39;)&lt;/code&gt;. It will create a skeleton under your project folder locally. You can change to a theme you like. The argument &lt;code&gt;sample&lt;/code&gt; create a sample in &lt;code&gt;/theme&lt;/code&gt; folder, which you can refer to in the future if you remove a feature and want it back again.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Push code to github.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Connect the &lt;code&gt;/public&lt;/code&gt; folder in your github respository (not the local folder in your laptop) to netlify by simply dragging the folder to netlify. Set up deploy settings, check hugo version (see next caveat), and click deploy.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Your website becomes alive!&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now this is the most important part. I say important because it took me hours to do silly things again and again without fully comprehension. To update the website, there are something you do or do not need to do.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;do-to-update&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Do to update&lt;/h2&gt;
&lt;p&gt;After initiating, in order to update the website, you edit the static website in Rstudio in your laptop. You will see the git window in Rstudio shows new “modified” items. &lt;code&gt;blogdown&lt;/code&gt; will automatically update local &lt;code&gt;/public&lt;/code&gt; (“local” means in your laptop) every time your save the &lt;code&gt;.rm&lt;/code&gt; or &lt;code&gt;.rmd&lt;/code&gt; file.
When you update blogs locally, the only thing you need to do is to push the updated code (the whole folder of your website, although only github &lt;code&gt;/public&lt;/code&gt; is used to deploy) to github, and wait for netlify to automatically deploy. It might take a few minutes for netlifly to deploy your website, but don’t worry – things getting simplier after the first try.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;dont-do-it-after-website-initiated&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Don’t do it after website initiated&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Don’t build the new site again by &lt;code&gt;new_site()&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Better not change the theme after editing on it. Stick to the theme you choose.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Don’t need to depoly manually after github connected to netlify.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Don’t manully deploy the website again on netlify.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;check-hugo-version-and-make-sure-its-right-in-netlify&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Check Hugo version, and make sure it’s right in netlify&lt;/h2&gt;
&lt;p&gt;If you find netlify doesn’t deploy your website successfully (and comes in with error 255), it might be due to the Hugo version. Some themes are built under later Hugo version. Make sure you check the Hugo version that &lt;code&gt;blogdown&lt;/code&gt; uses by the function &lt;code&gt;blogdown::hugo_version()&lt;/code&gt;. Now the version is:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;blogdown::hugo_version()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Go to netlify deploy setting / Build environment variables / Type in the key &lt;em&gt;HUGO_VERSION&lt;/em&gt; and value &lt;em&gt;0.59.1&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
